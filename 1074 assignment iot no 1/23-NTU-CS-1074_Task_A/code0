#include <Arduino.h>
#define LED1 19
#define LED2 18
#define LED3 5

#define BTN_MODE 34
#define BTN_RESET 35

volatile int mode = 0;
volatile int alt_Mode = 1;

// For Interrupt
volatile bool modeChanged = false;
volatile bool resetPressed = false;

// Debounce Via Millis()
unsigned long lastModePress = 0;
unsigned long lastResetPress = 0;
const unsigned long debounceDelay = 200; // 200 ms debounce

unsigned long previousMillis = 0;
bool ledState = LOW;

void IRAM_ATTR BTN_Pressed_Mode() {
  unsigned long currentTime = millis();
  if (currentTime - lastModePress > debounceDelay) {
    modeChanged = true;
    lastModePress = currentTime;
  }
}

void IRAM_ATTR BTN_Pressed_Reset() {
  unsigned long currentTime = millis();
  if (currentTime - lastResetPress > debounceDelay) {
    resetPressed = true;
    lastResetPress = currentTime;
  }
}

void setup() {
  pinMode(LED1, OUTPUT);
  pinMode(LED2, OUTPUT);
  pinMode(LED3, OUTPUT);
  pinMode(BTN_MODE, INPUT_PULLUP);
  pinMode(BTN_RESET, INPUT_PULLUP);

  //  Default OFF
  digitalWrite(LED1, LOW);
  digitalWrite(LED2, LOW);
  digitalWrite(LED3, LOW);


  //  Using Interrupt
  attachInterrupt(digitalPinToInterrupt(BTN_MODE), BTN_Pressed_Mode, FALLING);
  attachInterrupt(digitalPinToInterrupt(BTN_RESET), BTN_Pressed_Reset, FALLING);
}

void loop() {
  // Reset logic
  if (resetPressed) {
    mode = 0;
    digitalWrite(LED1, LOW);
    digitalWrite(LED2, LOW);
    digitalWrite(LED3, LOW);

    resetPressed = false;
  }

  // Mode change logic
  if (modeChanged) {
    mode++;
    if (mode > 3) mode = 0;
    modeChanged = false;
  }

  // LED behavior
  switch (mode) {
    case 0: // OFF (default/reset)
      digitalWrite(LED1, LOW);
      digitalWrite(LED2, LOW);
      digitalWrite(LED3, LOW);
      
      break;

    case 1: // OFF
      digitalWrite(LED1, LOW);
      digitalWrite(LED2, LOW);
      digitalWrite(LED3, LOW);
      
      break;

    case 2: // BLINK (non-blocking using millis)
      if(alt_Mode>3)
      {
        alt_Mode=1;
      }
      if (millis() - previousMillis >= 500) { // toggle every 0.5s
        previousMillis = millis();
        ledState = !ledState;

        switch (alt_Mode)
        {
          case 1:
          digitalWrite(LED1, ledState);
          digitalWrite(LED2, LOW);
          digitalWrite(LED3, LOW);
          alt_Mode++;
          break;
          case 2:
          digitalWrite(LED1, LOW);
          digitalWrite(LED2, ledState);
          digitalWrite(LED3, LOW);
          alt_Mode++;
          break;
          case 3:
          digitalWrite(LED1, LOW);
          digitalWrite(LED2, LOW);
          digitalWrite(LED3, ledState);
          alt_Mode++;
          break;
        }
      
      }
      break;

    case 3: // ON
      digitalWrite(LED1, HIGH);
      digitalWrite(LED2, HIGH);
      digitalWrite(LED3, HIGH);
      
      break;

  }
}






